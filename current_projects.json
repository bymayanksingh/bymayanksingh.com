[
  {
    "year": 2021,
    "description": "Developed a GPS-based Asset Tracking Portal for Jumbotail as part of Crio Winter of Doing Program.",
    "id": "0CDboPAqPHJuYo5Jix4Q",
    "status": "Completed",
    "area": "N/A",
    "coverImage": null,
    "client": "Jumbotail",
    "date": "2021",
    "category": "Software Development",
    "title": "GPS Asset Tracking Portal",
    "details": [
      "Designed and implemented a robust tracking system for assets.",
      "Part of the Crio Winter of Doing Program, selected among the top 150 out of 10,000 participants."
    ],
    "location": "Remote",
    "gallery": [],
    "featured": false
  },
  {
    "year": 2023,
    "description": "Developed a scalable document fetching application for KYC workflows.",
    "id": "1CDboPAqPHJuYo5Jix4Q",
    "status": "Live",
    "area": "N/A",
    "coverImage": null,
    "client": "IDfy",
    "date": "2023",
    "category": "Backend Development",
    "title": "Document Fetcher",
    "details": [
      "Built and maintained Elixir-based scalable apps.",
      "Handled up to 800 RPS during IPL peak traffic for Dream11.",
      "Integrated with DigiLocker and external APIs."
    ],
    "location": "Mumbai, India",
    "gallery": [],
    "featured": true
  },
  {
    "year": 2019,
    "description": "Organized and participated in OSDHack'19 Hackathon.",
    "id": "2CDboPAqPHJuYo5Jix4Q",
    "status": "Completed",
    "area": "N/A",
    "coverImage": null,
    "client": "Open Source Developers Community",
    "date": "2019",
    "category": "Event Management",
    "title": "OSDHack'19",
    "details": [
      "Mentored participants and managed logistics for the event.",
      "Contributed to the hackathon's technical setup and facilitation."
    ],
    "location": "Noida, India",
    "gallery": [],
    "featured": false
  },
  {
    "year": 2020,
    "description": "Developed and mentored the Connect4 open-source project.",
    "id": "3CDboPAqPHJuYo5Jix4Q",
    "status": "Open Source",
    "area": "N/A",
    "coverImage": null,
    "client": "Kharagpur Open Source Society",
    "date": "2020",
    "category": "Open Source Development",
    "title": "Connect4",
    "details": [
      "Mentored 30+ students across India in open-source development.",
      "Facilitated 25+ pull requests, 24 forks, and 12 stars within a month."
    ],
    "location": "Remote",
    "gallery": [],
    "featured": true
  },
  {
    "created_at": "2024-12-16 00:33:55.193631+00:00",
    "description": "It is a two-player board game, it consists of 6 rows, 7 columns suspended grid, where either of the players win by forming  a horizontal, vertical or diagonal line of four of one's own discs.",
    "technologies": "Used Python3, PyGame, Basic Shell scripting, Numpy, Adobe Photoshop.",
    "role": "As a developer, I worked on the initial working iteration of this project, then I open sourced this project and welcomed contributions from other developers in events like Hacktoberfest and Kharagpur Winter of Code (where I mentored students for this project) received a lot of traction for this in this events.",
    "github_url": "https://github.com/code-monk08/connect4",
    "title": "Connect Four Game",
    "date_built": "2019-02-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.193633+00:00",
    "id": "connect-four-game"
  },
  {
    "created_at": "2024-12-16 00:33:55.192689+00:00",
    "description": "It's a minimum viable product on entry management to be done during office events.",
    "technologies": "Used Node.js, MongoDB, EJS templates, Authentication using passport.js, Email Automation using Nodemailer, SMS automation using Nexmo (Vonage) sms API.",
    "role": "As a developer I implemented the frontend as well as the backend for this full stack web app.",
    "github_url": "https://github.com/code-monk08/entry-management",
    "title": "Ingress",
    "date_built": "2019-11-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.192691+00:00",
    "id": "ingress"
  },
  {
    "created_at": "2024-12-16 00:33:55.193867+00:00",
    "description": "It is a command line based utility which helps in finding and effectively visualizing shortest route between intra delhi metro stations, It uses dijkstras algorithm.",
    "technologies": "Used C++, graphviz, fim, zenity, sl, notify-osd",
    "role": "As a developer, I implemented the dijkstras algorithm using standard template library in C++, along with that I along with my team worked with graphviz which is a graph visualization text based language, we integrated it with our C++ code to dynamically visualize path between metro stations.",
    "github_url": "https://github.com/code-monk08/metroworks",
    "title": "Metroworks CLI",
    "date_built": "2018-10-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.193869+00:00",
    "id": "metroworks-cli"
  },
  {
    "created_at": "2024-12-16 00:33:55.192937+00:00",
    "description": "It is a Github & Gitlab API wrapper which is packaged into one server, contains minimal API interactions to get user, project & organization information.",
    "technologies": "Used Python3, Flask.",
    "role": "As a developer, I built this script from scratch, learnt about the working of APIs through this project.",
    "github_url": "https://github.com/code-monk08/open-source-api-wrapper",
    "title": "Open Source API Wrapper",
    "date_built": "2019-05-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.192938+00:00",
    "id": "open-source-api-wrapper"
  },
  {
    "created_at": "2024-12-16 00:33:55.192559+00:00",
    "description": "It's a Marketplace for plants which supports adding/removing a plant to the cart and making purchase, it also supports viewing orders, here users can act as sellers as well as buyers i.e. they can place orders as well as maintain their own catalouge of plants to sell.",
    "technologies": "Used Python, Django, Django Rest Framework, PostgreSQL database, Documentation using Swagger Open API Specification, Authentication using Json Web Tokens",
    "role": "As a developer I implemented the entire backend API from scratch",
    "github_url": "https://github.com/code-monk08/marketplace",
    "title": "Plant Nursery Marketplace API",
    "date_built": "2021-01-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.192561+00:00",
    "id": "plant-nursery-marketplace-api"
  },
  {
    "created_at": "2024-12-16 00:33:55.192785+00:00",
    "description": "Open Sourced questions database exposed using a REST API, it will let contributors add new questions in Multiple categories as MCQ or T/F types.",
    "technologies": "Used Python3, Flask, PostgreSQL database, docker, swagger UI.",
    "role": "As a developer I was an Open Source contributor, mainly worked on designing the database, implementing backend & documenting the API in collaboration with PyBites.",
    "github_url": "https://github.com/PyBites-Open-Source/questionnaire-api",
    "title": "Questionnaire API",
    "date_built": "2019-09-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.192787+00:00",
    "id": "questionnaire-api"
  },
  {
    "created_at": "2024-12-16 00:33:55.193504+00:00",
    "description": "It is a basic CRUD application which supports searching for cities worldwide and adding them as css cards showing their temperature and other details.",
    "technologies": "Used Python3, Flask, SQL database.",
    "role": "As a developer, I built this mini full stack web app from scratch, helped me learn about Flask, CSS and backend concepts.",
    "github_url": "https://github.com/code-monk08/simple-weather-app",
    "title": "Simple Weather App",
    "date_built": "2019-04-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.193506+00:00",
    "id": "simple-weather-app"
  },
  {
    "created_at": "2024-12-16 00:33:55.193789+00:00",
    "description": "It is a two-player board game, it consists of 3 rows, 3 columns suspended grid, where either of the players win by forming a horizontal, vertical or diagonal line of three of one's own noughts or crosses",
    "technologies": "Used Python3, PyGame, Basic Shell scripting, Numpy, Adobe Photoshop.",
    "role": "As a developer, I implemented this project entirely from scratch.",
    "github_url": "https://github.com/code-monk08/Tic-Tac-Toe",
    "title": "Tic Tac Toe",
    "date_built": "2019-01-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.193791+00:00",
    "id": "tic-tac-toe"
  },
  {
    "created_at": "2024-12-16 00:33:55.192868+00:00",
    "description": "It is a REST API on theatre ticket booking system.",
    "technologies": "Used Python, Django, Django Rest Framework, PostgreSQL database, Documentation using Swagger Open API Specification.",
    "role": "As a developer I implemented the entire backend API from scratch.",
    "github_url": "https://github.com/code-monk08/ticket-booking",
    "title": "Ticket Booking API",
    "date_built": "2020-09-01 00:00:00+00:00",
    "updated_at": "2024-12-16 00:33:55.192870+00:00",
    "id": "ticket-booking-api"
  }
]